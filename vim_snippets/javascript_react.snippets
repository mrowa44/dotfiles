snippet comp "flow component" b
// @flow
import * as React from 'react';

import styles from './${1:ComponentName}.cssmodule.scss';

type Props = {
};

class $1 extends React.Component<Props> {
	render() {
		$0
		return (
			<div>
				dupa
			</div>
		);
	}
}

export default $1;
endsnippet

snippet comp "standard component" b
import React from 'react';

import styles from './${1:ComponentName}.module.scss';

class $1 extends React.Component {
	render() {
		return (
			<div>
				dupa
			</div>
		);
	}
}

export default $1;
endsnippet

snippet comp "page with layout component" b
import React from 'react';

import Layout from 'components/layout';
import Text from 'components/Text';
import SEO from 'components/seo';
import styles from './${1:ComponentName}.module.scss';

class $1 extends React.Component {
	render() {
		return (
      <Layout>
        <SEO title="$1" />
        <div className={styles.container}>
        </div>
      </Layout>
		);
	}
}

export default $1;
endsnippet

snippet comp "functional component" b
// @flow
import * as React from 'react';

import styles from './${1:ComponentName}.cssmodule.scss';

type Props = {
};

function $1(props: Props) {
  return (
    <div>
      dupa
    </div>
  );
}

export default $1;
endsnippet

snippet story "storybook story" b
import React from 'react';
import { storiesOf } from '@storybook/react';

import { StoryDecorator, StoryItem, StorySection } from './components';

// import from '../src/';

storiesOf('test', module)
  .addDecorator((storyFn) => (
    <StoryDecorator>
      {storyFn()}
    </StoryDecorator>
  ))
  .add('normal', () => (
    <StorySection>
      <StoryItem>
				test
      </StoryItem>
		</StorySection>
  ));
endsnippet

snippet useState "useState" b
const [$1, set${1/\w+\s*/\u$0/g}] = React.useState(${3:})${0:;}
endsnippet

snippet useEffect "useEffect" b
React.useEffect(() => {
  $1
}, [])${0:;}
endsnippet

snippet <Text "Text component" Ai
<Text>
	$0
</Text>
endsnippet

snippet "<[A-Za-z" ]* class" "react className" rA
`!p snip.rv = match.group()`Name={styles.$0}
endsnippet

snippet iprop
import PropTypes from 'prop-types';
endsnippet

snippet itext
import Text from 'components/Text';
endsnippet

snippet iclass
import cx from 'classnames';
endsnippet

snippet icx
import cx from 'classnames';
endsnippet

snippet cx
import cx from 'classnames';
endsnippet

snippet iconn
import { connect } from 'react-redux';
endsnippet

snippet navigate
import { navigate } from 'helpers/navigation';
endsnippet

snippet nav
import { navigate } from 'helpers/navigation';
endsnippet

snippet inav 
import { navigate } from 'helpers/navigation';
endsnippet


snippet image
import { imagePath } from 'helpers/assets';
endsnippet

snippet inv
import { InvisibleButton } from 'components/Button';
endsnippet

snippet iamplitude
import { amplitudeLogEvent } from 'actions/amplitude';
endsnippet

snippet iamp
import { amplitudeLogEvent } from 'actions/amplitude';
endsnippet

snippet con
export default connect(${1:mapStateToProps})(`!v expand("%:t:r")`);
endsnippet

snippet cdm
componentDidMount() {
	${1}
}
endsnippet

snippet cdup
componentDidUpdate(prevProps, prevState) {
	${1}
}
endsnippet

snippet cwm
componentWillMount() {
	${1}
}
endsnippet

snippet cwr
componentWillReceiveProps(nextProps) {
	${1}
}
endsnippet

snippet cwun
componentWillUnmount() {
	${1}
}
endsnippet

snippet cwu
componentWillUpdate(nextProps, nextState) {
	${1}
}
endsnippet
